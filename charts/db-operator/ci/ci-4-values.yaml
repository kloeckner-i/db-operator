resources:
  limits:
    cpu: 10m
    memory: 32Mi
  requests:
    cpu: 10m
    memory: 32Mi

nodeSelector:
  nodetype: database

annotations:
  some.custom.annotation: "*"

podLabels:
  key1: value-one
  key2: value-two

affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/e2e-az-name
              operator: In
              values:
                - e2e-eu1
                - e2e-us2

tolerations:
  - key: "key1"
    operator: "Equal"
    value: "value1"
    effect: "NoSchedule"

config:
  instance:
    google:
      proxy:
        nodeSelector: {}
        image: kloeckneri/db-auth-gateway:0.1.7
        metricsPort: 9090
    generic: {}
    percona:
      proxy:
        image: severalnines/proxysql:2.0
        metricsPort: 9090
  backup:
    activeDeadlineSeconds: 600  # 10m
    nodeSelector:
      nodetype: database
    postgres:
      image: "kloeckneri/pgdump-gcs:latest"
    mysql:
      image: "kloeckneri/mydump-gcs:latest"
  monitoring:
    promPushGateway: ""
    nodeSelector:
      nodetype: database
    postgres:
      image: wrouesnel/postgres_exporter:latest
      queries:
        pg_stat_statements: {}

secrets:
  gsql: {}

serviceMonitor:
  enabled: false
  interval: 10s
  scrapeTimeout: 10s
  jobLabel: db-operator
  selector:
    prometheus: my-prometheus
metricRelabelings:
  - sourceLabels: [__meta_kubernetes_service_label_cluster]
    targetLabel: cluster
    regex: (.*)
    replacement: ${1}
    action: replace
relabelings:
  - sourceLabels: [__meta_kubernetes_pod_node_name]
    separator: ;
    regex: ^(.*)$
    targetLabel: nodename
    replacement: $1
    action: replace

service:
  annotations: {}
  type: ClusterIP
  port: 8080
