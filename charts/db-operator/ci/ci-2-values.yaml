image:
  repository: ghcr.io/kloeckner-i/db-operator
  pullPolicy: Always

reconcileInterval: "60"

rbac: {}

serviceAccount: {}

resources: {}

nodeSelector: {}

annotations: {}

affinity:
  nodeAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 1
        preference:
          matchExpressions:
            - key: another-node-label-key
              operator: In
              values:
                - another-node-label-value
tolerations:
  - key: "key1"
    operator: "Equal"
    value: "value1"
    effect: "NoSchedule"
  - key: "key2"
    operator: "Equal"
    value: "value2"
    effect: "NoSchedule"

config:
  instance:
    google:
      proxy:
        nodeSelector: {}
        image: kloeckneri/db-auth-gateway:0.1.7
        metricsPort: 9090
    generic: {}
    percona:
      proxy:
        image: severalnines/proxysql:2.0
        metricsPort: 9090
  backup:
    activeDeadlineSeconds: 600  # 10m
    nodeSelector:
      nodetype: database
    postgres:
      image: "kloeckneri/pgdump-gcs:latest"
    mysql:
      image: "kloeckneri/mydump-gcs:latest"
  monitoring:
    promPushGateway: ""
    nodeSelector:
      nodetype: database
    postgres:
      image: wrouesnel/postgres_exporter:latest
      queries:
        pg_stat_statements:
          query: "SELECT userid, pgss.dbid, pgdb.datname, queryid, query, calls, total_time, mean_time, rows FROM pg_stat_statements pgss LEFT JOIN (select oid as dbid, datname from pg_database) as pgdb on pgdb.dbid = pgss.dbid WHERE not queryid isnull ORDER BY mean_time desc limit 20"
          metrics:
            - userid:
                usage: "LABEL"
                description: "User ID"
            - dbid:
                usage: "LABEL"
                description: "database ID"
            - datname:
                usage: "LABEL"
                description: "database NAME"
            - queryid:
                usage: "LABEL"
                description: "Query unique Hash Code"
            - query:
                usage: "LABEL"
                description: "Query class"
            - calls:
                usage: "COUNTER"
                description: "Number of times executed"
            - total_time:
                usage: "COUNTER"
                description: "Total time spent in the statement, in milliseconds"
            - mean_time:
                usage: "GAUGE"
                description: "Mean time spent in the statement, in milliseconds"
            - rows:
                usage: "COUNTER"
                description: "Total number of rows retrieved or affected by the statement"

secrets:
  gsql:
    admin: "sa-json"
    readonly: "sa-json"

serviceMonitor:
  enabled: false
  interval: 10s
  scrapeTimeout: 10s
  jobLabel: db-operator
  selector:
    prometheus: my-prometheus
metricRelabelings:
  - sourceLabels: [__meta_kubernetes_service_label_cluster]
    targetLabel: cluster
    regex: (.*)
    replacement: ${1}
    action: replace
relabelings:
  - sourceLabels: [__meta_kubernetes_pod_node_name]
    separator: ;
    regex: ^(.*)$
    targetLabel: nodename
    replacement: $1
    action: replace

service:
  annotations: {}
  type: ClusterIP
  port: 8080
