{{- $root := . }}
{{- $nodeSelector := .Values.nodeSelector }}
{{- $configSha := include (print $.Template.BasePath "/postgres_exporter_query.yaml") . | sha256sum }}
{{- $exporter := .Values.exporter.postgres }}
{{- if .Values.dbinstances }}
{{- range $name, $value := .Values.dbinstances }}
{{- if eq $value.engine "postgres" }}
{{- if $value.monitoring.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dbinstance-{{ $name }}-pgexporter
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "db-instances.selectorLabels" $ | nindent 6 }}
      db-instance: {{ $name }}
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        prometheus.io/port: "60000"
        prometheus.io/scrape: "true"
        checksum/config: {{ $configSha }}
      labels:
        {{- include "db-instances.labels" $ | nindent 8 }}
        db-instance: {{ $name }}
    spec:
      containers:
      - env:
        - name: DATA_SOURCE_URI
          value: {{ $value.monitoring.uri | default (printf "dbinstance-%s-svc:5432/postgres?sslmode=disable" $name) }}
        - name: DATA_SOURCE_PASS_FILE
          value: /run/secrets/db-secrets/{{ $value.monitoring.passwordKey | default "password" }}
        - name: DATA_SOURCE_USER_FILE
          value: /run/secrets/db-secrets/{{ $value.monitoring.usernameKey | default "user" }}
        - name: PG_EXPORTER_WEB_LISTEN_ADDRESS
          value: :60000
        - name: PG_EXPORTER_EXTEND_QUERY_PATH
          value: /run/cm/queries/queries.yaml
        - name: PG_EXPORTER_CONSTANT_LABELS
          value: dbinstance={{ $name }}
        image: {{ $exporter.image }}
        imagePullPolicy: Always
        name: exporter
        ports:
        - name: metrics
          containerPort: 60000
        volumeMounts:
        - mountPath: /run/secrets/db-secrets
          name: db-secrets
        - mountPath: /run/cm/queries/queries.yaml
          name: queries
          subPath: queries.yaml
      nodeSelector:
{{ toYaml $nodeSelector | nindent 8 }}
      volumes:
      - name: db-secrets
        secret:
          defaultMode: 420
  {{- if $value.adminUserSecret }}
          secretName: {{ $value.adminUserSecret }}
  {{- else }}
          secretName: {{ $name }}-admin-secret
  {{- end }}
      - configMap:
          defaultMode: 420
          name: dbinstance-pgexporter-query
        name: queries
{{- if $root.Values.serviceMonitor.enabled }}
---
apiVersion: v1
kind: Service
metadata:
  name: dbinstance-{{ $name }}-pgexporter
  labels:
    {{- include "db-instances.labels" $ | nindent 4 }}
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: metrics
      protocol: TCP
      name: metrics
  selector:
    {{- include "db-instances.selectorLabels" $ | nindent 4 }}
    db-instance: {{ $name }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}