---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.1
  name: dbusers.kinda.rocks
spec:
  group: kinda.rocks
  names:
    kind: DbUser
    listKind: DbUserList
    plural: dbusers
    singular: dbuser
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: current dbuser status
      jsonPath: .status.status
      name: Status
      type: boolean
    - description: To which database user should have access
      jsonPath: .spec.databaseRef
      name: DatabaseName
      type: string
    - description: A type of access the user has
      jsonPath: .spec.accessType
      name: AccessType
      type: string
    - description: time since creation of resosÂ¡urce
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: DbUser is the Schema for the dbusers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DbUserSpec defines the desired state of DbUser
            properties:
              accessType:
                description: AccessType that should be given to a user Currently only
                  readOnly and readWrite are supported by the operator
                type: string
              databaseRef:
                description: DatabaseRef should contain a name of a Database to create
                  a user there Database should be in the same namespace with the user
                type: string
              secretName:
                description: SecretName name that should be used to save user's credentials
                type: string
              templates:
                description: Templates to add custom entries to ConfigMaps and Secrets
                items:
                  description: Tempaltes to add custom entries to comfigmaps and secrets
                  properties:
                    name:
                      type: string
                    secret:
                      type: boolean
                    template:
                      type: string
                  required:
                  - name
                  - secret
                  - template
                  type: object
                type: array
            required:
            - accessType
            - databaseRef
            - secretName
            type: object
          status:
            description: DbUserStatus defines the observed state of DbUser
            properties:
              created:
                description: It's required to let the operator update users
                type: boolean
              database:
                type: string
              status:
                type: boolean
            required:
            - created
            - database
            - status
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
