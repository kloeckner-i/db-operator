---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: databases.kci.rocks
  labels:
    app: {{ template "db-operator.name" . }}
    chart: {{ template "db-operator.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  group: kci.rocks
  scope: Namespaced
  names:
    kind: Database
    listKind: DatabaseList
    plural: databases
    singular: database
    shortNames:
      - db
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: Database is the Schema for the databases API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: DatabaseSpec defines the desired state of Database
              properties:
                backup:
                  description: DatabaseBackup defines the desired state of backup and schedule
                  properties:
                    cron:
                      type: string
                    enable:
                      type: boolean
                  required:
                    - cron
                    - enable
                  type: object
                deletionProtected:
                  type: boolean
                extensions:
                  items:
                    type: string
                  type: array
                instance:
                  type: string
                secretName:
                  description: 'Important: Run "operator-sdk generate k8s" to regenerate code after modifying this file Add custom validation using kubebuilder tags: https://book-v1.book.kubebuilder.io/beyond_basics/generating_crd.html'
                  type: string
              required:
                - backup
                - deletionProtected
                - instance
                - secretName
              type: object
              additionalProperties: true
            status:
              description: DatabaseStatus defines the observed state of Database
              properties:
                database:
                  type: string
                instanceRef:
                  description: DbInstance is the Schema for the dbinstances API
                  properties:
                    apiVersion:
                      description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                      type: string
                    kind:
                      description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: DbInstanceSpec defines the desired state of DbInstance
                      type: object
                    status:
                      description: DbInstanceStatus defines the observed state of DbInstance
                      type: object
                  type: object
                  additionalProperties: true
                monitorUserSecret:
                  type: string
                phase:
                  description: 'Important: Run "operator-sdk generate k8s" to regenerate code after modifying this file Add custom validation using kubebuilder tags: https://book-v1.book.kubebuilder.io/beyond_basics/generating_crd.html'
                  type: string
                proxyStatus:
                  description: DatabaseProxyStatus defines whether proxy for database is enabled or not if so, provide information
                  properties:
                    serviceName:
                      type: string
                    sqlPort:
                      format: int32
                      type: integer
                    status:
                      type: boolean
                  required:
                    - serviceName
                    - sqlPort
                    - status
                  type: object
                status:
                  type: boolean
                user:
                  type: string
              required:
                - database
                - instanceRef
                - phase
                - status
                - user
              type: object
          type: object
      additionalPrinterColumns:
      - jsonPath: .status.phase
        description: current db status
        name: Phase
        type: string
      - jsonPath: .status.status
        description: current db status
        name: Status
        type: boolean
      - jsonPath: .spec.deletionProtected
        description: If database is protected to not get deleted.
        name: Protected
        type: boolean
      - jsonPath: .status.instanceRef.metadata.name
        description: instance reference
        name: DbInstance
        type: string
      - jsonPath: .metadata.creationTimestamp
        description: |-
          CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.
        name: Age
        type: date
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: dbinstances.kci.rocks
  labels:
    app: {{ template "db-operator.name" . }}
    chart: {{ template "db-operator.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  group: kci.rocks
  scope: Cluster
  names:
    kind: DbInstance
    listKind: DbInstanceList
    plural: dbinstances
    singular: dbinstance
    shortNames:
      - dbin
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: DbInstance is the Schema for the dbinstances API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: DbInstanceSpec defines the desired state of DbInstance
              type: object
              required:
                - adminSecretRef
                - engine
              oneOf:
                - required:
                  - percona
                - required:
                  - google
                - required:
                  - generic
              properties:
                engine:
                  type: string
                adminSecretRef:
                  type: object
                  properties:
                    Namespace:
                      type: string
                    Name:
                      type: string
                backup:
                  type: object
                  properties:
                    bucket:
                      type: string
                  required:
                    - bucket
                generic:
                  properties:
                    backupHost:
                      description: BackupHost address will be used for dumping database for backup Usually secondary address for primary-secondary setup or cluster lb address If it's not defined, above Host will be used as backup host address.
                      type: string
                    host:
                      type: string
                    port:
                      type: integer
                    publicIp:
                      type: string
                  required:
                    - host
                    - port
                  type: object
                google:
                  description: GoogleInstance is used when instance type is Google Cloud SQL and describes necessary informations to use google API to create sql instances
                  properties:
                    configmapRef:
                      type: object
                    instance:
                      type: string
                  required:
                    - configmapRef
                    - instance
                  type: object
                percona:
                  description: PerconaCluster is used when instance type is percona cluster
                  properties:
                    servers:
                      type: array
                      items:
                        description: BackendServer defines backend database server
                        required:
                          - host
                          - maxConn
                          - port
                        properties:
                          host:
                            type: string
                          maxConn:
                            minimum: 1
                            type: integer
                          port:
                            type: integer
                          readonly:
                            type: boolean
                        type: object
                    monitorUserSecretRef:
                      type: object
                  required:
                    - monitorUserSecretRef
                    - servers
                  type: object
                monitoring:
                  type: object
                  properties:
                    enabled:
                      type: boolean
                  required:
                    - enabled
                sslConnection:
                  description: DbInstanceSSLConnection defines weather connection from db-operator to instance has to be ssl or not
                  properties:
                    enabled:
                      type: boolean
                    skip-verify:
                      description: SkipVerity use SSL connection, but don't check against a CA
                      type: boolean
                  required:
                    - enabled
                    - skip-verify
                  type: object
            status:
              description: DbInstanceStatus defines the observed state of DbInstance
              type: object
          type: object
      additionalPrinterColumns:
      - jsonPath: .status.phase
        description: current phase
        name: Phase
        type: string
      - jsonPath: .status.status
        description: health status
        name: Status
        type: boolean